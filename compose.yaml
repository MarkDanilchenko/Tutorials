services:
  api:
    restart: always
    build:
      context: .
      dockerfile: DockerfileAPIserver
    container_name: api
    command: >
      sh -c 'python3 manage.py makemigrations
      && python3 manage.py migrate
      && python3 manage.py collectstatic --noinput
      && gunicorn Tutorials.wsgi:application --bind ${DJANGO_SERVER_HOST}:${DJANGO_SERVER_PORT}'
    ports:
      - ${DJANGO_SERVER_PORT}:${DJANGO_SERVER_PORT}
    environment:
      - DATABASE_HOST=db
    volumes:
      - ./API/staticfiles:/app/API/staticfiles
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${DJANGO_SERVER_HOST}:${DJANGO_SERVER_PORT}/test/"]
      timeout: 15s
      interval: 5s
      retries: 3
    networks:
      - app_network
  db:
    restart: always
    image: postgres:16.4
    container_name: db
    ports:
      - 5433:${DATABASE_PORT}
    env_file:
      - .env.public
    volumes:
      - ./db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_network
  webserver:
    restart: always
    build:
      context: .
      dockerfile: DockerfileWebserver
    container_name: webserver
    ports:
      - 8080:80
    volumes:
      - ./API/staticfiles:/app/staticfiles
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app_network

volumes:
  db_data:
    driver: local
  staticfiles:
    driver: local

networks:
  app_network:
